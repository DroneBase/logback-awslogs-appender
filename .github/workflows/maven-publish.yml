# This workflow will builds packages using Maven and then publish them to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      # Creates an appropriate settings.xml and settings-security.xml in $HOME/.m2 that will allow maven to download
      # dependencies from and publish artifacts to github packages.
      - name: Set up Maven
        run: mkdir "$HOME/.m2" && cp "$GITHUB_WORKSPACE/.github/workflows/settings.xml" "$HOME/.m2/" && echo "<settingsSecurity><master>$MAVEN_MASTER</master></settingsSecurity>" > "$HOME/.m2/settings-security.xml"
        env:
          MAVEN_MASTER: ${{ secrets.MAVEN_MASTER_PWD }}

      # For the build to be able to download dependencies from other github repositories, it must use
      # a personal access token of a user with the proper permissions.  It is stored as a secret of the
      # project in github, (Available under project settings).
      - name: Build with Maven
        run: mvn -B package
        env:
          MAVEN_REPO_USERNAME: ${{ secrets.MAVEN_REPO_USER }}
          MAVEN_REPO_PASSWORD: ${{ secrets.MAVEN_REPO_PWD }}

      # Publish publishes into this project's private repo and can use the github token for authentication.
      - name: Publish to GitHub Packages
        run: mvn -Dmaven.test.skip=true -B deploy
        env:
          GITHUB_TOKEN: ${{ github.token }}
